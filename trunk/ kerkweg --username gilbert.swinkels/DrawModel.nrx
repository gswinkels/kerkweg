/* epidemie                                             
   Natuur en Techniek 3, 1993 p258-260

   Het (x,y) model wordt in een frame op het scherm getekend
   gebruik makend van een "off-screen" beeld dat de opgebouwde grafiek bevat
   
   geen incubatie
   p = periode dat de ziekte besmettelijk is (dagen)
   q = periode tijdelijk immuniteit, te rekenen van begin ziekte (dagen)
   a = infectiviteit van de ziekte
   v(n) = aantal vatbaren op dag n
   w(n) = totaal aantal immunen en overledenen
   z(n) = aantal nieuwe zieken op dag n
   z(n,k) = aantal zieken op dag n die k dagen ziek zijn
   beginvoorwaarden :  v(0)=1-e en z(0)=e met e<<1 (klein aantal zieken,iedereen vatbaar)
   relatie 1 :    z(n,k)=z(n-k)
   relatie 2 :    van dag n tot n+1 hebben de zieken kontakt gehad met v(n) vatbaren;
                  totaal zieken zijn z(n)+z(n-1)+z(n-2)+...+z(n-p+1)
                  dus z(n+1)=a.v(n).(z(n)+...+z(n-p+1))/p
   relatie 3 :    v(n+1)=v(n)-z(n)+z(n-q)

  
   @author Gilbert Swinkels
   @version March 3th, 2007 14:26

*/

options binary   

class Epidemie adapter extends Frame implements WindowListener
  
    properties constant
    mywidth=500                                         -- pixel size x-as
    myheight=500                                        -- pixel size y-as
    glass=Toolkit.getDefaultToolkit.getScreenSize       -- screen geometry

    properties private
    shadow=Image                            -- where we'll build the image

/* The 'main' method is called when this class is started as an application */
    method main(s=String[]) static
    x=Epidemie("Epidemie Model")                    -- make a titled frame
    x.setBounds((glass.width-mywidth)%2,-
       (glass.height-myheight)%2,mywidth, myheight) -- move and resize
    x.show                                          -- and make it visible

/* The constructor passes the title to our superclass,
   and requests that we be told about Window events */
    method Epidemie(s=String)
    super(s)
    addWindowListener(this)

/* update -- called when the display content needs updating */
    method update(g=Graphics)
    shadow=createImage(getSize.width, getSize.height)  -- make new image
    d=shadow.getGraphics                         -- context for graphics
    maxx=getSize.width-1  
    maxy=getSize.height-1
    d.setColor(Color.black) 
    d.fillRect(0,0,maxx,maxy)                -- set background black
    d.setColor(Color.white)                  -- draw pixels white
    titlebarthickness=20
    ybegin=50
    yeind=50
    ybegin=ybegin+titlebarthickness
    maxy=maxy-yeind
    xbegin=10                                 -- pixels free at start of x-axis
    xeind=10                                  -- pixels free at end of x-axis
    maxx=maxx-xbegin-xeind
    say "aantal dagen te beschouwen (vb. verkoudheid 730) : /n"
    n=ask
    say "infectiviteit (vb. verkoudheid 1.22) : /n"
    a=ask
    say "besmettelijke periode (in dagen, vb. 7) : /n"
    p=ask
    say "immuniteit (dagen sinds begin ziekte, vb. 100) : /n"
    q=ask
    -- z[q],h[q]
    eps = .001
    loop for i = 2 to q
      z(q) = 0
    end
    x = 1 - eps
    z(1) = eps

    loop for i = 1 to n
       d.drawline((i, 0)-(i, 1 - x), 14)
       s = 0
       loop for j = 1 to p
            s = s + z(j)
       end
       h(1) = a * x * s / p
       loop for k = 2 TO q
           h(k) = z(k - 1)
       end
       x = x + z(q) - h(1)
       loop for l = 1 to q
          z(l) = h(l)
       end
    end

        
    paint(g)                                      -- paint to screen

    
  
/* paint -- called when the window needs to be redrawn, either by
   update or when a window is uncovered */  
   method paint(g=Graphics)
   if shadow=null then update(g)                 -- (no image yet)
   g.drawImage(shadow, 0, 0, this)               -- copy to screen

/* windowClosing -- called when the window is closed, need this to handle
     the end of program when window gets closed. */
   method windowClosing(e=WindowEvent)
   exit

